using System.Collections;
using Damage;
using UnityEngine;

namespace Spells {
    [RequireComponent(typeof(Damageable))]
    public class Vulnerability : MonoBehaviour {
        public int PercentileIncrease = 25;

        public float Duration = 10;

        private Damageable target;
        private DamageInterceptor interceptor;

        private void Start() {
            target = GetComponent<Damageable>();
            if (target == null) return;

            interceptor = new DamageInterceptor {
                // Apply this effect pretty much last
                Order = 10,
                Interceptor = amount => {
                    // Don't change healing
                    if (amount >= 0) return amount;
                    // Increase dmg
                    float p = (float) PercentileIncrease / 100;
                    return (int) (amount + amount * p);
                }
            };

            target.AddDamageInterceptor(interceptor);
            StartCoroutine(RemoveInterceptor());
        }

        IEnumerator RemoveInterceptor() {
            yield return new WaitForSeconds(Duration);
            target.RemoveDamageInterceptor(interceptor);
            Destroy(this);
        }
    }
}